# Generated by Django 5.0.2 on 2024-02-24 12:47

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="OTPVerification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.EmailField(max_length=254)),
                ("otp_key", models.CharField(max_length=6)),
                (
                    "updated_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("should_appear", models.BooleanField(default=False)),
                ("address_type", models.CharField(max_length=20)),
                ("address_line_1", models.CharField(max_length=255)),
                (
                    "address_line_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("zip_code", models.CharField(max_length=20)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Billing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("same_as_above", models.BooleanField(default=False)),
                (
                    "billing_address_line_1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "billing_address_line_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "billing_city",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "billing_state",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "billing_country",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "billing_zip_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("show_on_bni_public_websites", models.BooleanField(default=False)),
                ("billing_address_quick_copy", models.TextField(blank=True, null=True)),
                ("phone", models.CharField(max_length=20)),
                (
                    "direct_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("home", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("pager", models.CharField(blank=True, max_length=20, null=True)),
                ("voice_mail", models.CharField(blank=True, max_length=20, null=True)),
                ("toll_free", models.CharField(blank=True, max_length=20, null=True)),
                ("fax", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(max_length=255)),
                ("receive_updates_from_bni", models.BooleanField(default=False)),
                (
                    "share_revenue_data_with_bni_director",
                    models.BooleanField(default=False),
                ),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "social_networking_links",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FolderManager",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("FolderName", models.CharField(max_length=255)),
                ("category", models.CharField(max_length=50)),
                ("path", models.CharField(max_length=400)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MainProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("title", models.CharField(blank=True, max_length=5, null=True)),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("suffix", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("gender", models.CharField(max_length=6)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "product_service_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "gst_registered_state",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "gst_identification_number_or_pan",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("industry", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "classification",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "requested_speciality",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("membership_status", models.CharField(max_length=11)),
                (
                    "RenewalDueDate",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("Chapter", models.CharField(blank=True, max_length=255, null=True)),
                ("my_business", models.TextField(blank=True, null=True)),
                ("keywords", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("seen", models.BooleanField(default=False)),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PathManager",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("path", models.CharField(max_length=400)),
                ("file", models.FileField(upload_to="Files/")),
                ("category", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=255)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language", models.CharField(blank=True, max_length=100, null=True)),
                ("timezone", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_images/"
                    ),
                ),
                (
                    "company_logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="company_logos/"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("accepted", "Accepted")],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "connection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connected_to",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "connection")},
            },
        ),
    ]
